{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mohamedabi/notebook64bfbc7456?scriptVersionId=159536862\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"1975cf46","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-01-19T00:27:38.100312Z","iopub.status.busy":"2024-01-19T00:27:38.099906Z","iopub.status.idle":"2024-01-19T00:27:38.52765Z","shell.execute_reply":"2024-01-19T00:27:38.526472Z"},"papermill":{"duration":0.438443,"end_time":"2024-01-19T00:27:38.530338","exception":false,"start_time":"2024-01-19T00:27:38.091895","status":"completed"},"tags":[]},"outputs":[],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"code","execution_count":2,"id":"7f0b2ab5","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:27:38.543543Z","iopub.status.busy":"2024-01-19T00:27:38.543043Z","iopub.status.idle":"2024-01-19T00:27:54.692023Z","shell.execute_reply":"2024-01-19T00:27:54.690929Z"},"papermill":{"duration":16.158546,"end_time":"2024-01-19T00:27:54.69483","exception":false,"start_time":"2024-01-19T00:27:38.536284","status":"completed"},"tags":[]},"outputs":[],"source":["# Import des bibliothèques nécessaires\n","import numpy as np\n","from sklearn.neighbors import KNeighborsClassifier\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Flatten\n","from tensorflow.keras.datasets import mnist\n","from sklearn.metrics import accuracy_score"]},{"cell_type":"code","execution_count":3,"id":"86560319","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:27:54.708716Z","iopub.status.busy":"2024-01-19T00:27:54.707924Z","iopub.status.idle":"2024-01-19T00:27:56.017145Z","shell.execute_reply":"2024-01-19T00:27:56.015821Z"},"papermill":{"duration":1.319117,"end_time":"2024-01-19T00:27:56.019911","exception":false,"start_time":"2024-01-19T00:27:54.700794","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 1s 0us/step\n"]}],"source":["# Chargement de l'ensemble de données MNIST\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()\n","\n"]},{"cell_type":"code","execution_count":4,"id":"dd889928","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:27:56.035847Z","iopub.status.busy":"2024-01-19T00:27:56.035445Z","iopub.status.idle":"2024-01-19T00:27:56.150444Z","shell.execute_reply":"2024-01-19T00:27:56.149255Z"},"papermill":{"duration":0.12607,"end_time":"2024-01-19T00:27:56.153175","exception":false,"start_time":"2024-01-19T00:27:56.027105","status":"completed"},"tags":[]},"outputs":[],"source":["# Prétraitement des images\n","x_train = x_train.astype('float32') / 255.0\n","x_test = x_test.astype('float32') / 255.0\n","x_train_flat = x_train.reshape((x_train.shape[0], -1))\n","x_test_flat = x_test.reshape((x_test.shape[0], -1))\n"]},{"cell_type":"code","execution_count":5,"id":"a4ad46f6","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:27:56.16898Z","iopub.status.busy":"2024-01-19T00:27:56.16858Z","iopub.status.idle":"2024-01-19T00:33:38.497086Z","shell.execute_reply":"2024-01-19T00:33:38.496032Z"},"papermill":{"duration":342.33978,"end_time":"2024-01-19T00:33:38.500099","exception":false,"start_time":"2024-01-19T00:27:56.160319","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.svm import SVC\n","\n","# Ajustement des paramètres du SVM\n","svm_model = SVC(kernel='linear', C=1.0)\n","svm_model.fit(x_train_flat, y_train)\n","svm_predictions = svm_model.predict(x_test_flat)"]},{"cell_type":"code","execution_count":6,"id":"d75b4dfb","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:33:38.516204Z","iopub.status.busy":"2024-01-19T00:33:38.515788Z","iopub.status.idle":"2024-01-19T00:33:38.700919Z","shell.execute_reply":"2024-01-19T00:33:38.699873Z"},"papermill":{"duration":0.196136,"end_time":"2024-01-19T00:33:38.703584","exception":false,"start_time":"2024-01-19T00:33:38.507448","status":"completed"},"tags":[]},"outputs":[],"source":["# Définition du modèle du réseau de neurones\n","model = Sequential()\n","model.add(Flatten(input_shape=(28, 28)))  # Ajuster en fonction de la taille de vos images\n","model.add(Dense(128, activation='relu'))\n","model.add(Dense(10, activation='softmax'))"]},{"cell_type":"code","execution_count":7,"id":"bddf20cb","metadata":{"collapsed":true,"execution":{"iopub.execute_input":"2024-01-19T00:33:38.720152Z","iopub.status.busy":"2024-01-19T00:33:38.71928Z","iopub.status.idle":"2024-01-19T00:42:07.008484Z","shell.execute_reply":"2024-01-19T00:42:07.007246Z"},"jupyter":{"outputs_hidden":true},"papermill":{"duration":508.300594,"end_time":"2024-01-19T00:42:07.011543","exception":false,"start_time":"2024-01-19T00:33:38.710949","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/100\n","1500/1500 [==============================] - 6s 3ms/step - loss: 0.2849 - accuracy: 0.9188 - val_loss: 0.1510 - val_accuracy: 0.9570\n","Epoch 2/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.1275 - accuracy: 0.9620 - val_loss: 0.1176 - val_accuracy: 0.9647\n","Epoch 3/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0867 - accuracy: 0.9740 - val_loss: 0.0959 - val_accuracy: 0.9700\n","Epoch 4/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0645 - accuracy: 0.9812 - val_loss: 0.0955 - val_accuracy: 0.9714\n","Epoch 5/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0499 - accuracy: 0.9843 - val_loss: 0.0831 - val_accuracy: 0.9734\n","Epoch 6/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0382 - accuracy: 0.9887 - val_loss: 0.0901 - val_accuracy: 0.9728\n","Epoch 7/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0302 - accuracy: 0.9909 - val_loss: 0.0800 - val_accuracy: 0.9763\n","Epoch 8/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0239 - accuracy: 0.9928 - val_loss: 0.0898 - val_accuracy: 0.9747\n","Epoch 9/100\n","1500/1500 [==============================] - 6s 4ms/step - loss: 0.0191 - accuracy: 0.9940 - val_loss: 0.0871 - val_accuracy: 0.9747\n","Epoch 10/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0164 - accuracy: 0.9953 - val_loss: 0.0894 - val_accuracy: 0.9769\n","Epoch 11/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0145 - accuracy: 0.9956 - val_loss: 0.0862 - val_accuracy: 0.9772\n","Epoch 12/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0106 - accuracy: 0.9970 - val_loss: 0.0893 - val_accuracy: 0.9784\n","Epoch 13/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0099 - accuracy: 0.9970 - val_loss: 0.0926 - val_accuracy: 0.9783\n","Epoch 14/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0081 - accuracy: 0.9978 - val_loss: 0.0981 - val_accuracy: 0.9768\n","Epoch 15/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0095 - accuracy: 0.9971 - val_loss: 0.1214 - val_accuracy: 0.9718\n","Epoch 16/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0090 - accuracy: 0.9972 - val_loss: 0.1028 - val_accuracy: 0.9782\n","Epoch 17/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0047 - accuracy: 0.9987 - val_loss: 0.1018 - val_accuracy: 0.9779\n","Epoch 18/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0071 - accuracy: 0.9976 - val_loss: 0.1141 - val_accuracy: 0.9762\n","Epoch 19/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0060 - accuracy: 0.9985 - val_loss: 0.1264 - val_accuracy: 0.9749\n","Epoch 20/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0049 - accuracy: 0.9985 - val_loss: 0.1072 - val_accuracy: 0.9786\n","Epoch 21/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0043 - accuracy: 0.9988 - val_loss: 0.1271 - val_accuracy: 0.9757\n","Epoch 22/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0053 - accuracy: 0.9984 - val_loss: 0.1249 - val_accuracy: 0.9767\n","Epoch 23/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0054 - accuracy: 0.9983 - val_loss: 0.1265 - val_accuracy: 0.9764\n","Epoch 24/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0024 - accuracy: 0.9994 - val_loss: 0.1273 - val_accuracy: 0.9759\n","Epoch 25/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0068 - accuracy: 0.9978 - val_loss: 0.1318 - val_accuracy: 0.9765\n","Epoch 26/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0035 - accuracy: 0.9989 - val_loss: 0.1244 - val_accuracy: 0.9768\n","Epoch 27/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0038 - accuracy: 0.9989 - val_loss: 0.1236 - val_accuracy: 0.9783\n","Epoch 28/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0030 - accuracy: 0.9989 - val_loss: 0.1298 - val_accuracy: 0.9767\n","Epoch 29/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0039 - accuracy: 0.9988 - val_loss: 0.1400 - val_accuracy: 0.9762\n","Epoch 30/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0030 - accuracy: 0.9992 - val_loss: 0.1330 - val_accuracy: 0.9777\n","Epoch 31/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0032 - accuracy: 0.9989 - val_loss: 0.1382 - val_accuracy: 0.9768\n","Epoch 32/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0037 - accuracy: 0.9987 - val_loss: 0.1501 - val_accuracy: 0.9745\n","Epoch 33/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0046 - accuracy: 0.9984 - val_loss: 0.1565 - val_accuracy: 0.9744\n","Epoch 34/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0028 - accuracy: 0.9992 - val_loss: 0.1409 - val_accuracy: 0.9777\n","Epoch 35/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0028 - accuracy: 0.9991 - val_loss: 0.1428 - val_accuracy: 0.9777\n","Epoch 36/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0031 - accuracy: 0.9991 - val_loss: 0.1479 - val_accuracy: 0.9760\n","Epoch 37/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0025 - accuracy: 0.9992 - val_loss: 0.1441 - val_accuracy: 0.9780\n","Epoch 38/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0039 - accuracy: 0.9988 - val_loss: 0.1404 - val_accuracy: 0.9778\n","Epoch 39/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0022 - accuracy: 0.9994 - val_loss: 0.1937 - val_accuracy: 0.9737\n","Epoch 40/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0040 - accuracy: 0.9986 - val_loss: 0.1515 - val_accuracy: 0.9787\n","Epoch 41/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0017 - accuracy: 0.9995 - val_loss: 0.1525 - val_accuracy: 0.9758\n","Epoch 42/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0050 - accuracy: 0.9985 - val_loss: 0.1457 - val_accuracy: 0.9786\n","Epoch 43/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0021 - accuracy: 0.9993 - val_loss: 0.1593 - val_accuracy: 0.9783\n","Epoch 44/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0017 - accuracy: 0.9994 - val_loss: 0.1540 - val_accuracy: 0.9787\n","Epoch 45/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0035 - accuracy: 0.9988 - val_loss: 0.1621 - val_accuracy: 0.9779\n","Epoch 46/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0029 - accuracy: 0.9991 - val_loss: 0.1675 - val_accuracy: 0.9763\n","Epoch 47/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 8.9641e-04 - accuracy: 0.9997 - val_loss: 0.1958 - val_accuracy: 0.9744\n","Epoch 48/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0059 - accuracy: 0.9980 - val_loss: 0.1582 - val_accuracy: 0.9784\n","Epoch 49/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0011 - accuracy: 0.9997 - val_loss: 0.1677 - val_accuracy: 0.9768\n","Epoch 50/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0030 - accuracy: 0.9990 - val_loss: 0.1778 - val_accuracy: 0.9758\n","Epoch 51/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0027 - accuracy: 0.9991 - val_loss: 0.1547 - val_accuracy: 0.9784\n","Epoch 52/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 6.9369e-04 - accuracy: 0.9997 - val_loss: 0.1627 - val_accuracy: 0.9787\n","Epoch 53/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0051 - accuracy: 0.9983 - val_loss: 0.1890 - val_accuracy: 0.9768\n","Epoch 54/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0030 - accuracy: 0.9991 - val_loss: 0.1910 - val_accuracy: 0.9752\n","Epoch 55/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0013 - accuracy: 0.9995 - val_loss: 0.1668 - val_accuracy: 0.9787\n","Epoch 56/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 3.7481e-04 - accuracy: 0.9999 - val_loss: 0.1734 - val_accuracy: 0.9785\n","Epoch 57/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0042 - accuracy: 0.9987 - val_loss: 0.1747 - val_accuracy: 0.9776\n","Epoch 58/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0026 - accuracy: 0.9990 - val_loss: 0.1677 - val_accuracy: 0.9778\n","Epoch 59/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0017 - accuracy: 0.9994 - val_loss: 0.1996 - val_accuracy: 0.9741\n","Epoch 60/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0015 - accuracy: 0.9996 - val_loss: 0.1672 - val_accuracy: 0.9786\n","Epoch 61/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0032 - accuracy: 0.9991 - val_loss: 0.2101 - val_accuracy: 0.9737\n","Epoch 62/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0039 - accuracy: 0.9988 - val_loss: 0.1746 - val_accuracy: 0.9788\n","Epoch 63/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0016 - accuracy: 0.9995 - val_loss: 0.1813 - val_accuracy: 0.9763\n","Epoch 64/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 2.2850e-04 - accuracy: 1.0000 - val_loss: 0.1686 - val_accuracy: 0.9800\n","Epoch 65/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0054 - accuracy: 0.9985 - val_loss: 0.1787 - val_accuracy: 0.9807\n","Epoch 66/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 6.6704e-04 - accuracy: 0.9999 - val_loss: 0.1702 - val_accuracy: 0.9786\n","Epoch 67/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0025 - accuracy: 0.9993 - val_loss: 0.2363 - val_accuracy: 0.9747\n","Epoch 68/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0022 - accuracy: 0.9992 - val_loss: 0.1779 - val_accuracy: 0.9788\n","Epoch 69/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 3.5411e-04 - accuracy: 0.9999 - val_loss: 0.2120 - val_accuracy: 0.9756\n","Epoch 70/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0052 - accuracy: 0.9986 - val_loss: 0.1807 - val_accuracy: 0.9792\n","Epoch 71/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0026 - accuracy: 0.9993 - val_loss: 0.1758 - val_accuracy: 0.9791\n","Epoch 72/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0025 - accuracy: 0.9992 - val_loss: 0.1922 - val_accuracy: 0.9788\n","Epoch 73/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0013 - accuracy: 0.9994 - val_loss: 0.1920 - val_accuracy: 0.9782\n","Epoch 74/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0014 - accuracy: 0.9996 - val_loss: 0.1985 - val_accuracy: 0.9762\n","Epoch 75/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0028 - accuracy: 0.9992 - val_loss: 0.1935 - val_accuracy: 0.9795\n","Epoch 76/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0022 - accuracy: 0.9992 - val_loss: 0.2082 - val_accuracy: 0.9781\n","Epoch 77/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 4.5126e-04 - accuracy: 0.9999 - val_loss: 0.1949 - val_accuracy: 0.9793\n","Epoch 78/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 3.6495e-05 - accuracy: 1.0000 - val_loss: 0.1889 - val_accuracy: 0.9795\n","Epoch 79/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 9.4819e-06 - accuracy: 1.0000 - val_loss: 0.1904 - val_accuracy: 0.9795\n","Epoch 80/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 4.2702e-06 - accuracy: 1.0000 - val_loss: 0.1860 - val_accuracy: 0.9800\n","Epoch 81/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 2.6896e-06 - accuracy: 1.0000 - val_loss: 0.1849 - val_accuracy: 0.9803\n","Epoch 82/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 1.9216e-06 - accuracy: 1.0000 - val_loss: 0.1861 - val_accuracy: 0.9807\n","Epoch 83/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 1.3502e-06 - accuracy: 1.0000 - val_loss: 0.1842 - val_accuracy: 0.9808\n","Epoch 84/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 0.0056 - accuracy: 0.9987 - val_loss: 0.2646 - val_accuracy: 0.9716\n","Epoch 85/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0032 - accuracy: 0.9990 - val_loss: 0.1993 - val_accuracy: 0.9787\n","Epoch 86/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 8.5042e-04 - accuracy: 0.9998 - val_loss: 0.2293 - val_accuracy: 0.9775\n","Epoch 87/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 2.0155e-04 - accuracy: 0.9999 - val_loss: 0.2025 - val_accuracy: 0.9794\n","Epoch 88/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0053 - accuracy: 0.9987 - val_loss: 0.2302 - val_accuracy: 0.9759\n","Epoch 89/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0028 - accuracy: 0.9991 - val_loss: 0.2218 - val_accuracy: 0.9756\n","Epoch 90/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0012 - accuracy: 0.9997 - val_loss: 0.2002 - val_accuracy: 0.9774\n","Epoch 91/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 1.4212e-04 - accuracy: 1.0000 - val_loss: 0.2058 - val_accuracy: 0.9794\n","Epoch 92/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 2.0055e-05 - accuracy: 1.0000 - val_loss: 0.1902 - val_accuracy: 0.9793\n","Epoch 93/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 6.9539e-06 - accuracy: 1.0000 - val_loss: 0.1901 - val_accuracy: 0.9794\n","Epoch 94/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 2.9152e-06 - accuracy: 1.0000 - val_loss: 0.1885 - val_accuracy: 0.9800\n","Epoch 95/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 1.9108e-06 - accuracy: 1.0000 - val_loss: 0.1894 - val_accuracy: 0.9796\n","Epoch 96/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 1.2776e-06 - accuracy: 1.0000 - val_loss: 0.1897 - val_accuracy: 0.9798\n","Epoch 97/100\n","1500/1500 [==============================] - 5s 4ms/step - loss: 8.8108e-07 - accuracy: 1.0000 - val_loss: 0.1893 - val_accuracy: 0.9800\n","Epoch 98/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 6.1811e-07 - accuracy: 1.0000 - val_loss: 0.1914 - val_accuracy: 0.9803\n","Epoch 99/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0079 - accuracy: 0.9980 - val_loss: 0.2563 - val_accuracy: 0.9758\n","Epoch 100/100\n","1500/1500 [==============================] - 5s 3ms/step - loss: 0.0017 - accuracy: 0.9996 - val_loss: 0.2399 - val_accuracy: 0.9753\n"]},{"data":{"text/plain":["<keras.src.callbacks.History at 0x78a556b31e40>"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["# Compilation et entraînement du modèle de réseau de neurones\n","model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])\n","model.fit(x_train, y_train, epochs=100, batch_size=32, validation_split=0.2)\n"]},{"cell_type":"code","execution_count":8,"id":"238dc0ce","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:08.78957Z","iopub.status.busy":"2024-01-19T00:42:08.789107Z","iopub.status.idle":"2024-01-19T00:42:09.64432Z","shell.execute_reply":"2024-01-19T00:42:09.643007Z"},"papermill":{"duration":1.787772,"end_time":"2024-01-19T00:42:09.646925","exception":false,"start_time":"2024-01-19T00:42:07.859153","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["313/313 [==============================] - 1s 2ms/step\n","[7 2 1 ... 4 5 6]\n"]}],"source":["# Prédictions du réseau de neurones sur l'ensemble de test\n","nn_predictions = np.argmax(model.predict(x_test), axis=1)\n","print(nn_predictions)"]},{"cell_type":"code","execution_count":9,"id":"c332b991","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:11.357408Z","iopub.status.busy":"2024-01-19T00:42:11.356926Z","iopub.status.idle":"2024-01-19T00:42:11.391824Z","shell.execute_reply":"2024-01-19T00:42:11.390517Z"},"papermill":{"duration":0.894344,"end_time":"2024-01-19T00:42:11.394704","exception":false,"start_time":"2024-01-19T00:42:10.50036","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"],"text/plain":["KNeighborsClassifier()"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["# Mise en place de k-NN\n","knn_model = KNeighborsClassifier(n_neighbors=5)  # Ajuster la valeur de 'k' selon vos besoins\n","knn_model.fit(x_train_flat, y_train)\n"]},{"cell_type":"code","execution_count":10,"id":"3a62b708","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:13.178935Z","iopub.status.busy":"2024-01-19T00:42:13.177315Z","iopub.status.idle":"2024-01-19T00:42:31.084891Z","shell.execute_reply":"2024-01-19T00:42:31.083665Z"},"papermill":{"duration":18.7615,"end_time":"2024-01-19T00:42:31.087817","exception":false,"start_time":"2024-01-19T00:42:12.326317","status":"completed"},"tags":[]},"outputs":[],"source":["# Prédictions de k-NN sur l'ensemble de test\n","knn_predictions = knn_model.predict(x_test_flat)\n"]},{"cell_type":"code","execution_count":11,"id":"1783cc38","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:32.861647Z","iopub.status.busy":"2024-01-19T00:42:32.860564Z","iopub.status.idle":"2024-01-19T00:42:32.86601Z","shell.execute_reply":"2024-01-19T00:42:32.865159Z"},"papermill":{"duration":0.925343,"end_time":"2024-01-19T00:42:32.868064","exception":false,"start_time":"2024-01-19T00:42:31.942721","status":"completed"},"tags":[]},"outputs":[],"source":["# Combinaison des prédictions (vote majoritaire)\n","hybrid_predictions = np.argmin(np.vstack((nn_predictions, knn_predictions)), axis=0)\n"]},{"cell_type":"code","execution_count":12,"id":"9a139f7e","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:34.594721Z","iopub.status.busy":"2024-01-19T00:42:34.593946Z","iopub.status.idle":"2024-01-19T00:42:34.603059Z","shell.execute_reply":"2024-01-19T00:42:34.601867Z"},"papermill":{"duration":0.879869,"end_time":"2024-01-19T00:42:34.605705","exception":false,"start_time":"2024-01-19T00:42:33.725836","status":"completed"},"tags":[]},"outputs":[],"source":["# Évaluation des performances\n","nn_accuracy = accuracy_score(y_test, nn_predictions)\n","knn_accuracy = accuracy_score(y_test, knn_predictions)\n","hybrid_accuracy = accuracy_score(y_test, hybrid_predictions)\n"]},{"cell_type":"code","execution_count":13,"id":"ab99846c","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:36.382629Z","iopub.status.busy":"2024-01-19T00:42:36.381628Z","iopub.status.idle":"2024-01-19T00:42:36.387658Z","shell.execute_reply":"2024-01-19T00:42:36.386515Z"},"papermill":{"duration":0.860157,"end_time":"2024-01-19T00:42:36.390324","exception":false,"start_time":"2024-01-19T00:42:35.530167","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Neural Network Accuracy: 0.9771\n","K-NN Accuracy: 0.9688\n","Hybrid Model Accuracy: 0.0977\n"]}],"source":["# Affichage des résultats\n","print(f\"Neural Network Accuracy: {nn_accuracy}\")\n","print(f\"K-NN Accuracy: {knn_accuracy}\")\n","print(f\"Hybrid Model Accuracy: {hybrid_accuracy}\")\n"]},{"cell_type":"code","execution_count":14,"id":"e3b4ade1","metadata":{"execution":{"iopub.execute_input":"2024-01-19T00:42:38.177398Z","iopub.status.busy":"2024-01-19T00:42:38.176666Z","iopub.status.idle":"2024-01-19T00:42:38.184144Z","shell.execute_reply":"2024-01-19T00:42:38.182989Z"},"papermill":{"duration":0.935446,"end_time":"2024-01-19T00:42:38.186298","exception":false,"start_time":"2024-01-19T00:42:37.250852","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Hybrid Model (with SVM) Accuracy: 0.0975\n"]}],"source":["\n","hybrid_predictions_svm = np.argmin(np.vstack((nn_predictions, svm_predictions)), axis=0)\n","\n","# Évaluation des performances du modèle hybride avec SVM\n","hybrid_accuracy_svm = accuracy_score(y_test, hybrid_predictions_svm)\n","print(f\"Hybrid Model (with SVM) Accuracy: {hybrid_accuracy_svm}\")"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30635,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":906.098576,"end_time":"2024-01-19T00:42:40.667009","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-01-19T00:27:34.568433","version":"2.4.0"}},"nbformat":4,"nbformat_minor":5}